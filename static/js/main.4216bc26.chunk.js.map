{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","src","avatar","alt","className","s","wrapper","name","message","time","messageData","HW1","Affair","affair_wrapper","affair_id","affair","_id","affair_name","onClick","id","deleteAffairCallback","btn_delete","Affairs","mappedAffairs","data","map","a","key","defaultAffairs","btn_wrapper","btn_priority","btn_all","filterAffairs","btn_high","btn_middle","btn_low","priority","HW2","useState","affairs","setAffairs","filter","setFilter","filteredAffairs","priorityItem","deleteAffair","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4216bc26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_wrapper\":\"Affairs_btn_wrapper__RLE2x\",\"btn_priority\":\"Affairs_btn_priority__2erWW\",\"btn_all\":\"Affairs_btn_all__3-TVf\",\"btn_high\":\"Affairs_btn_high__22djm\",\"btn_middle\":\"Affairs_btn_middle__2COy3\",\"btn_low\":\"Affairs_btn_low__y57C1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__3fHC-\",\"avatar\":\"Message_avatar__1K-1n\",\"name\":\"Message_name__1UJIF\",\"message\":\"Message_message__oZ3gS\",\"time\":\"Message_time__1jps2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair_name\":\"Affair_affair_name__3DpJK\",\"btn_delete\":\"Affair_btn_delete__1S4u-\",\"affair_wrapper\":\"Affair_affair_wrapper__Eu_9a\",\"affair_id\":\"Affair_affair_id__lsFmS\",\"sd\":\"Affair_sd__2SqFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2DsUU\"};","import React from \"react\";\nimport { MessageDataType } from \"./HW1\";\nimport s from './Message.module.css';\n\n\nfunction Message(props: MessageDataType ) {\n    return (\n        <div>\n            <div>\n                <img src={props.avatar} alt=\"avatar\" className={s.avatar}/>\n            </div>\n        \n            <div className={s.wrapper}>\n\n            \n            <div className={s.name}>{props.name}</div>\n            <div className={s.message}>{props.message}</div>\n            <div className={s.time}>{props.time}</div>\n        </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\n// import { PropsTypesMessage } from \"../../p1-main/m1-ui/u1-app/App\";\nimport Message from \"./Message\";\n\n\nexport type MessageDataType = {\n    avatar: string\n    name:string\n    message:string\n    time:string\n}\n\n\nconst messageData:MessageDataType = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Constantine\",\n    message: \"Привет! Ничего не понимаю))\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport s from \"./Affair.module.css\";\nimport { AffairType } from \"./HW2\";\n\nexport type AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType; // need to fix any\n  deleteAffairCallback: (id: number) => void; // need to fix any\n  defaultAffairs: Array<AffairType>;\n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = (id: number) => {\n    props.deleteAffairCallback(id);\n  };\n\n  return (\n    <div className={s.affair_wrapper}>\n      <span className={s.affair_id}>{props.affair._id}</span>\n      <span className={s.affair_name}>{props.affair.name}</span>\n      <button onClick={()=> deleteCallback(props.affair._id)} className={s.btn_delete}>DEL</button>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from './Affairs.module.css';\n\nexport type AffairsPropsType = {\n    data:  Array<AffairType>\n    setFilter: (value: FilterType) => void // не уверен\n    deleteAffairCallback: (id: number) => void\n    defaultAffairs: Array<AffairType>\n    filterAffairs: (value: FilterType) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n            defaultAffairs={props.defaultAffairs}\n        />\n    ))\n\n    const setAll = () => {\n        props.filterAffairs(\"all\");\n    }; \n    const setHigh = () => {\n        props.filterAffairs(\"high\");\n    };\n    const setMiddle = () => {\n        props.filterAffairs(\"middle\");\n    };\n    const setLow = () => {\n        props.filterAffairs(\"low\");\n    };\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <div className={s.btn_wrapper}>\n                <button className={`${s.btn_priority} + ${s.btn_all}`} onClick={setAll}>All</button>\n                <button className={`${s.btn_priority} + ${s.btn_high}`} onClick={setHigh}>High</button>\n                <button className={`${s.btn_priority} + ${s.btn_middle}`} onClick={setMiddle}>Middle</button>\n                <button className={`${s.btn_priority} + ${s.btn_low}`} onClick={setLow}>Low</button>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"; \nexport type AffairType = {\n  _id: number;\n  name: string;\n  priority: AffairPriorityType;\n};\n\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  { _id: 1, name: \"React\", priority: \"high\" },\n  { _id: 2, name: \"anime\", priority: \"low\" },\n  { _id: 3, name: \"games\", priority: \"low\" },\n  { _id: 4, name: \"work\", priority: \"high\" },\n  { _id: 5, name: \"html & css\", priority: \"middle\" },\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n  let priorityItem = affairs;\n\n  if (filter === \"high\") {\n    priorityItem = affairs.filter((a) => a.priority === \"high\");\n  } else if (filter === \"middle\") {\n    priorityItem = affairs.filter((a) => a.priority === \"middle\");\n  } else if (filter === \"low\") {\n    priorityItem = affairs.filter((a) => a.priority === \"low\");\n  }\n\n  return priorityItem;\n};\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n\n    let filteredTasks = affairs.filter((a : AffairType) => {\n        return a._id !== _id\n    });\n\n        return filteredTasks; // need to fix\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n  const [filter, setFilter] = useState<FilterType>(\"all\");\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n\n  function changeFilter(value: FilterType) {\n    setFilter(value);\n}\n\n  const deleteAffairCallback = (_id: number) => {\n    setAffairs(deleteAffair(affairs, _id));\n  }\n    \n\n  return (\n    <div>\n      <hr />\n      homeworks 2{/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n        defaultAffairs={defaultAffairs}\n        filterAffairs={changeFilter}\n      />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW2;\n","import React from \"react\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport s from \"./App.module.css\";\n\n// export type PropsTypesMessage = {\n//     avatar: string,\n//     name: string,\n//     message: string,\n//     time: string\n// }\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1  />\n            <HW2 />\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}